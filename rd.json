{"items":[{"flag":"default","featured":true,"revisions":[{"name":"ai-as-a-service","release":"2021-09-18","title":"AI as a Service","ring":"trial","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/ai-as-a-service.md","body":"<p>When we want to incorporate AI into our solutions we prefer to use existing AI as a Service (AIaaS)\nservices, when possible. We focus on the AIaaS services offered by AWS and Azure but other AIaaS\nservices, when they are a better fit, can also be used.</p>\n<p>This is waiting for a strategic decision on what we as INFO want as to offer to our clients\nregarding data science and ML.</p>\n"}],"name":"ai-as-a-service","title":"AI as a Service","ring":"trial","quadrant":"techniques","body":"<p>When we want to incorporate AI into our solutions we prefer to use existing AI as a Service (AIaaS)\nservices, when possible. We focus on the AIaaS services offered by AWS and Azure but other AIaaS\nservices, when they are a better fit, can also be used.</p>\n<p>This is waiting for a strategic decision on what we as INFO want as to offer to our clients\nregarding data science and ML.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/ai-as-a-service.md"},{"flag":"changed","featured":true,"revisions":[{"name":"aws","release":"2022-05-17","title":"AWS","ring":"adopt","quadrant":"platforms","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/aws.md","body":"<p>We support both AWS and Azure for our cloud-native platforms but generally prefer AWS.</p>\n"},{"name":"aws","release":"2020-09-01","title":"AWS","ring":"adopt","quadrant":"platforms","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/aws.md","body":"<p>We prefer AWS or Azure cloud-native infrastructure for new client solutions.</p>\n"}],"name":"aws","title":"AWS","ring":"adopt","quadrant":"platforms","body":"<p>We support both AWS and Azure for our cloud-native platforms but generally prefer AWS.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/aws.md"},{"flag":"changed","featured":true,"revisions":[{"name":"aws-ci-cd-tools","release":"2022-05-17","title":"AWS CI CD Tools","ring":"hold","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/aws-ci-cd-tools.md","body":"<p>The AWS stack for CI CD solutions like CodeCommit, CodeBuild and CodeDeploy offers a well integrated\nsolution for projects which are using Cloud Native components on AWS. However we find that GitHub\nsurpasses the AWS CI CD stack.</p>\n"},{"name":"aws-ci-cd-tools","release":"2021-09-18","title":"AWS CI CD Tools","ring":"adopt","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/aws-ci-cd-tools.md","body":"<p>The AWS stack for CI CD solutions like CodeCommit, CodeBuild and CodeDeploy offer a well integrated solution for projects which are using Cloud Native components on AWS.</p>\n"}],"name":"aws-ci-cd-tools","title":"AWS CI CD Tools","ring":"hold","quadrant":"tools","body":"<p>The AWS stack for CI CD solutions like CodeCommit, CodeBuild and CodeDeploy offers a well integrated\nsolution for projects which are using Cloud Native components on AWS. However we find that GitHub\nsurpasses the AWS CI CD stack.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/aws-ci-cd-tools.md"},{"flag":"changed","featured":true,"revisions":[{"name":"azure","release":"2022-05-17","title":"Azure","ring":"adopt","quadrant":"platforms","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/azure.md","body":"<p>We support both AWS and Azure for our cloud-native platforms but generally prefer AWS.</p>\n"},{"name":"azure","release":"2020-09-01","title":"Azure","ring":"adopt","quadrant":"platforms","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/azure.md","body":"<p>We prefer AWS or Azure cloud-native infrastructure for new client solutions.</p>\n"}],"name":"azure","title":"Azure","ring":"adopt","quadrant":"platforms","body":"<p>We support both AWS and Azure for our cloud-native platforms but generally prefer AWS.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/azure.md"},{"flag":"changed","featured":true,"revisions":[{"name":"azure-devops","release":"2022-05-17","title":"Azure DevOps","ring":"hold","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/azure-devops.md","body":"<p>Having used Azure DevOps for some client projects we have come to the conclusion that it is not the\nbest fit for our needs as we feel GitHub surpasses it in all areas. Both are owned by Microsoft but\nMicrosoft seems to put all their cards on GitHub. We see no reason to choose Azure DevOps over\nGitHub even for cloud-native Azure projects. </p>\n"},{"name":"azure-devops","release":"2020-09-01","title":"Azure DevOps","ring":"adopt","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/azure-devops.md","body":""}],"name":"azure-devops","title":"Azure DevOps","ring":"hold","quadrant":"tools","body":"<p>Having used Azure DevOps for some client projects we have come to the conclusion that it is not the\nbest fit for our needs as we feel GitHub surpasses it in all areas. Both are owned by Microsoft but\nMicrosoft seems to put all their cards on GitHub. We see no reason to choose Azure DevOps over\nGitHub even for cloud-native Azure projects. </p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/azure-devops.md"},{"flag":"changed","featured":true,"revisions":[{"name":"bitbucket-cloud-and-pipelines","release":"2022-05-17","title":"Bitbucket Cloud & Pipelines","ring":"hold","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/bitbucket-cloud-and-pipelines.md","body":"<p>Having used Bitbucket Cloud &amp; Pipelines for a number of years both for internal and for client\nprojects we have come to the conclusion that it is no longer the best fit for our needs as we feel \nGitHub surpasses it in all areas.</p>\n"},{"name":"bitbucket-cloud-and-pipelines","release":"2021-09-18","title":"Bitbucket Cloud & Pipelines","ring":"assess","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/bitbucket-cloud-and-pipelines.md","body":"<p>The Atlassian Bitbucket Cloud stack is a mature and widely used CI/CD solution offering good integration with various target platforms including AWS and Azure. \nAtlassian at this point does not offer an artifact repository so this solution requires additional tooling: AWS ECR or Azure Artifacts.</p>\n"},{"name":"bitbucket-cloud-and-pipelines","release":"2020-09-01","title":"Bitbucket Cloud & Pipelines","ring":"adopt","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/bitbucket-cloud-and-pipelines.md","body":"<p>The Atlassian Bitbucket Cloud stack is a mature and widely used CI/CD solution offering good integration with various target platforms including AWS and Azure. \nAtlassian at this point does not offer an artifact repository so this solution requires additional tooling: AWS ECR or Azure Artifacts.</p>\n"}],"name":"bitbucket-cloud-and-pipelines","title":"Bitbucket Cloud & Pipelines","ring":"hold","quadrant":"tools","body":"<p>Having used Bitbucket Cloud &amp; Pipelines for a number of years both for internal and for client\nprojects we have come to the conclusion that it is no longer the best fit for our needs as we feel \nGitHub surpasses it in all areas.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/bitbucket-cloud-and-pipelines.md"},{"flag":"new","featured":true,"revisions":[{"name":"cloud-hosting-cost-optimisation","release":"2022-05-17","title":"Cloud hosting cost optimisation","ring":"adopt","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/cloud-hosting-cost-optimisation.md","body":"<p>Cloud hosting cost optimisation should be a continuous and integral part of our way of working, both\nin active projects as well as in platforms under maintenance, in which case it should be part of the\nSLA. Cloud vendors offer extensive tooling in this area which should be used for this purpose. Also\nconsider using an architectural fitness function (see item on &#39;Evolutionary Architectures&#39;) for\noptimising the run-cost. In some exceptional cases it could even be considered to change the hosting\narchitecture / platform altogether.</p>\n"}],"name":"cloud-hosting-cost-optimisation","title":"Cloud hosting cost optimisation","ring":"adopt","quadrant":"techniques","body":"<p>Cloud hosting cost optimisation should be a continuous and integral part of our way of working, both\nin active projects as well as in platforms under maintenance, in which case it should be part of the\nSLA. Cloud vendors offer extensive tooling in this area which should be used for this purpose. Also\nconsider using an architectural fitness function (see item on &#39;Evolutionary Architectures&#39;) for\noptimising the run-cost. In some exceptional cases it could even be considered to change the hosting\narchitecture / platform altogether.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/cloud-hosting-cost-optimisation.md"},{"flag":"default","featured":true,"revisions":[{"name":"cloud-native-platforms","release":"2020-09-01","title":"Cloud-native platforms","ring":"adopt","quadrant":"platforms","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/cloud-native-platforms.md","body":"<p>In the context of the infrastructure and architecture for new client solutions at INFO, facing market-conform requirements for fast time-to-market, high agility and pay-per-use costs, we prefer a vendor-specific cloud-native (Amazon AWS or Microsoft Azure) solution over traditional on-premise or hybrid solutions (while still offering such solutions when there is a good reason), to achieve faster time-to-market, more agility and lower costs (depending on usage) because of the ability to use many out-of-the-box cloud vendor services, accepting a vendor lock-in towards the cloud provider, because some cloud services that will be used are specific to the cloud vendor in question.</p>\n"}],"name":"cloud-native-platforms","title":"Cloud-native platforms","ring":"adopt","quadrant":"platforms","body":"<p>In the context of the infrastructure and architecture for new client solutions at INFO, facing market-conform requirements for fast time-to-market, high agility and pay-per-use costs, we prefer a vendor-specific cloud-native (Amazon AWS or Microsoft Azure) solution over traditional on-premise or hybrid solutions (while still offering such solutions when there is a good reason), to achieve faster time-to-market, more agility and lower costs (depending on usage) because of the ability to use many out-of-the-box cloud vendor services, accepting a vendor lock-in towards the cloud provider, because some cloud services that will be used are specific to the cloud vendor in question.</p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/cloud-native-platforms.md"},{"flag":"default","featured":true,"revisions":[{"name":"content-as-a-service","release":"2021-09-18","title":"Content as a Service","ring":"adopt","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/content-as-a-service.md","body":"<p>Content as a Service is a method of storing content in its raw form so that systems such as\nwebsites, apps, and devices can call and serve each piece as needed using an application programming\ninterface (API). Any CMS we use at INFO should have this headless capability available.</p>\n"}],"name":"content-as-a-service","title":"Content as a Service","ring":"adopt","quadrant":"techniques","body":"<p>Content as a Service is a method of storing content in its raw form so that systems such as\nwebsites, apps, and devices can call and serve each piece as needed using an application programming\ninterface (API). Any CMS we use at INFO should have this headless capability available.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/content-as-a-service.md"},{"flag":"default","featured":true,"revisions":[{"name":"contentful","release":"2021-09-18","title":"Contentful","ring":"assess","quadrant":"platforms","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/contentful.md","body":""}],"name":"contentful","title":"Contentful","ring":"assess","quadrant":"platforms","body":"","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/contentful.md"},{"flag":"default","featured":true,"revisions":[{"name":"cypress","release":"2021-09-18","title":"Cypress","ring":"adopt","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/cypress.md","body":"<p>At INFO we strive for continuous automated functional testing and we prefer to use Cypress as functional test tool.</p>\n"}],"name":"cypress","title":"Cypress","ring":"adopt","quadrant":"tools","body":"<p>At INFO we strive for continuous automated functional testing and we prefer to use Cypress as functional test tool.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/cypress.md"},{"flag":"default","featured":true,"revisions":[{"name":"data-science-and-machine-learning","release":"2020-09-01","title":"AI and Data Science","ring":"trial","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/data-science-and-machine-learning.md","body":"<p>If real data science and machine learning solutions are needed for our clients (beware of misusing\nthis sometimes overhyped technology) we prefer to use the data science and ML services offered by\nAWS and Azure.</p>\n"}],"name":"data-science-and-machine-learning","title":"AI and Data Science","ring":"trial","quadrant":"techniques","body":"<p>If real data science and machine learning solutions are needed for our clients (beware of misusing\nthis sometimes overhyped technology) we prefer to use the data science and ML services offered by\nAWS and Azure.</p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/data-science-and-machine-learning.md"},{"flag":"default","featured":true,"revisions":[{"name":"data-streaming","release":"2020-09-01","title":"Data Streaming","ring":"adopt","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/data-streaming.md","body":"<p>Stream processing is a useful technique for processing large volumes of data, and in combination with Event Processing and Streaming SQL, this also becomes a viable way for handling intra-service communication (pub/sub style). It should be preferred over direct intra-service API communication where possible.</p>\n"}],"name":"data-streaming","title":"Data Streaming","ring":"adopt","quadrant":"techniques","body":"<p>Stream processing is a useful technique for processing large volumes of data, and in combination with Event Processing and Streaming SQL, this also becomes a viable way for handling intra-service communication (pub/sub style). It should be preferred over direct intra-service API communication where possible.</p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/data-streaming.md"},{"flag":"default","featured":true,"revisions":[{"name":"dependency-drift-fitness-function","release":"2021-09-18","title":"Dependency drift fitness function","ring":"trial","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/dependency-drift-fitness-function.md","body":"<p>Dependency drift means that libraries that are used for a project are out-of-date. A fitness\nfunction is trying to put a value to a check that is run, so that would be in this case the drift\nthat is determined for the used libraries. A simple approach would be to count the number of\nout-dated libraries.</p>\n<p>The way to minimize dependency drift is to ensure that there is a (automated) process in place for\nupdating dependencies. An automated approach can be setup using Renovate so that dependencies are\nchecked and updated regularly.</p>\n"}],"name":"dependency-drift-fitness-function","title":"Dependency drift fitness function","ring":"trial","quadrant":"techniques","body":"<p>Dependency drift means that libraries that are used for a project are out-of-date. A fitness\nfunction is trying to put a value to a check that is run, so that would be in this case the drift\nthat is determined for the used libraries. A simple approach would be to count the number of\nout-dated libraries.</p>\n<p>The way to minimize dependency drift is to ensure that there is a (automated) process in place for\nupdating dependencies. An automated approach can be setup using Renovate so that dependencies are\nchecked and updated regularly.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/dependency-drift-fitness-function.md"},{"flag":"default","featured":true,"revisions":[{"name":"docker","release":"2020-09-01","title":"Docker","ring":"adopt","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/docker.md","body":"<p>Docker is the industry standard for containerisation and we use it to build, run and test microservices and other containers.</p>\n"}],"name":"docker","title":"Docker","ring":"adopt","quadrant":"tools","body":"<p>Docker is the industry standard for containerisation and we use it to build, run and test microservices and other containers.</p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/docker.md"},{"flag":"changed","featured":true,"revisions":[{"name":"docker-developer-environments","release":"2022-05-17","title":"Docker Developer Environments","ring":"hold","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/docker-developer-environments.md","body":"<p>We now prefer GitHub Code Spaces over Docker Developer Environments.</p>\n"},{"name":"docker-developer-environments","release":"2021-09-18","title":"Docker Developer Environments","ring":"assess","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/docker-developer-environments.md","body":"<p>Docker Development Environments is still in preview, but the idea is that the whole code base,\nincluding development setup for coding in Visual Studio Code. It can be a single container, or a\ncompose based set of containers that make up a whole project. Any changes made in the code can be\npushed as a new snapshot image to a docker repository, from where an other developer can continue in\nthe same state.</p>\n"}],"name":"docker-developer-environments","title":"Docker Developer Environments","ring":"hold","quadrant":"tools","body":"<p>We now prefer GitHub Code Spaces over Docker Developer Environments.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/docker-developer-environments.md"},{"flag":"new","featured":true,"revisions":[{"name":"domain-driven-design","release":"2022-05-17","title":"Domain Driven Design (DDD)","ring":"adopt","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/domain-driven-design.md","body":"<p>Domain-driven design (DDD) is a software design approach focusing on modelling software to match a\ndomain according to input from that domain&#39;s experts.</p>\n<p>Domain-driven design is predicated on the following goals:</p>\n<ul>\n<li>placing the project&#39;s primary focus on the core domain and domain logic</li>\n<li>basing complex designs on a model of the domain</li>\n<li>initiating a creative collaboration between technical and domain experts to iteratively refine a\nconceptual model that addresses particular domain problems.</li>\n</ul>\n"}],"name":"domain-driven-design","title":"Domain Driven Design (DDD)","ring":"adopt","quadrant":"techniques","body":"<p>Domain-driven design (DDD) is a software design approach focusing on modelling software to match a\ndomain according to input from that domain&#39;s experts.</p>\n<p>Domain-driven design is predicated on the following goals:</p>\n<ul>\n<li>placing the project&#39;s primary focus on the core domain and domain logic</li>\n<li>basing complex designs on a model of the domain</li>\n<li>initiating a creative collaboration between technical and domain experts to iteratively refine a\nconceptual model that addresses particular domain problems.</li>\n</ul>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/domain-driven-design.md"},{"flag":"changed","featured":true,"revisions":[{"name":"event-driven-architecture","release":"2022-05-17","title":"Event-driven Architecture","ring":"adopt","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/event-driven-architecture.md","body":"<p>Consider using an Event-Driven Architecture in the following cases (taken from: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.microsoft.com/en-us/azure/architecture/guide/architecture-styles/event-driven\">Event-driven\narchitecture style</a>):</p>\n<ul>\n<li>Multiple subsystems must process the same events.</li>\n<li>Real-time processing with minimum time lag.</li>\n<li>Complex event processing, such as pattern matching or aggregation over time windows.</li>\n<li>High volume and high velocity of data, such as IoT.\nBe aware of the complexities and potential pitfalls involved when adopting this architecture. When\nusing Even-Driven Architectures consider using Event Sourcing.</li>\n</ul>\n"},{"name":"event-driven-architecture","release":"2021-09-18","title":"Event-driven Architecture","ring":"adopt","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/event-driven-architecture.md","body":"<p>Decoupled systems that run in response to events. An event-driven architecture uses events to\ntrigger and communicate between decoupled services and is common in modern applications built with\nmicroservices. An event is a change in state, or an update, like an item being placed in a shopping\ncart on an e-commerce website. Events can either carry the state (the item purchased, its price, and\na delivery address) or events can be identifiers (a notification that an order was shipped).\nEvent-driven architectures have three key components: event producers, event routers, and event\nconsumers. A producer publishes an event to the router, which filters and pushes the events to\nconsumers. Producer services and consumer services are decoupled, which allows them to be scaled,\nupdated, and deployed independently. This also becomes a viable way for handling intra-service\ncommunication (pub/sub style). It should be preferred over direct intra-service API communication\nwhere possible.</p>\n"}],"name":"event-driven-architecture","title":"Event-driven Architecture","ring":"adopt","quadrant":"techniques","body":"<p>Consider using an Event-Driven Architecture in the following cases (taken from: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://docs.microsoft.com/en-us/azure/architecture/guide/architecture-styles/event-driven\">Event-driven\narchitecture style</a>):</p>\n<ul>\n<li>Multiple subsystems must process the same events.</li>\n<li>Real-time processing with minimum time lag.</li>\n<li>Complex event processing, such as pattern matching or aggregation over time windows.</li>\n<li>High volume and high velocity of data, such as IoT.\nBe aware of the complexities and potential pitfalls involved when adopting this architecture. When\nusing Even-Driven Architectures consider using Event Sourcing.</li>\n</ul>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/event-driven-architecture.md"},{"flag":"default","featured":true,"revisions":[{"name":"event-sourcing","release":"2021-09-18","title":"Event Sourcing","ring":"assess","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/event-sourcing.md","body":"<p>Event sourcing is an approach to thinking about persistent data where the primary record is a log of\nall events that make updates. A traditional representation of the database state can be entirely\nrecreated by reprocessing this event log. Event sourcing’s benefits include strong auditing,\ncreation of a historic state, and replaying of events for debugging and analysis. Event sourcing has\nbeen around for a while, but we think it is used much less than it should be.</p>\n<p>Event Sourcing ensures that all changes to the application state are stored as a sequence of events.\nNot only can we query these events, but we can also use the event log to reconstruct past states,\nand as a foundation to automatically adjust the state to cope with retroactive changes.\nComplementary to the capture of business meaningful events, the technique has positive implications\nfor analytics in driving greater customer insight.</p>\n"}],"name":"event-sourcing","title":"Event Sourcing","ring":"assess","quadrant":"techniques","body":"<p>Event sourcing is an approach to thinking about persistent data where the primary record is a log of\nall events that make updates. A traditional representation of the database state can be entirely\nrecreated by reprocessing this event log. Event sourcing’s benefits include strong auditing,\ncreation of a historic state, and replaying of events for debugging and analysis. Event sourcing has\nbeen around for a while, but we think it is used much less than it should be.</p>\n<p>Event Sourcing ensures that all changes to the application state are stored as a sequence of events.\nNot only can we query these events, but we can also use the event log to reconstruct past states,\nand as a foundation to automatically adjust the state to cope with retroactive changes.\nComplementary to the capture of business meaningful events, the technique has positive implications\nfor analytics in driving greater customer insight.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/event-sourcing.md"},{"flag":"new","featured":true,"revisions":[{"name":"evolutionary-architecture","release":"2022-05-17","title":"Evolutionary Architecture","ring":"assess","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/evolutionary-architecture.md","body":"<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.thoughtworks.com/decoder/evolutionary-architecture\">Evolutionary architecture</a> is an\napproach to building software that’s designed to evolve over time as\nbusiness priorities change, customer demands shift, and new technologies emerge.</p>\n<p>We want to assess using some of the techniques in this area, like for example using &#39;Fitness Function\nDevelopment&#39;.</p>\n"}],"name":"evolutionary-architecture","title":"Evolutionary Architecture","ring":"assess","quadrant":"techniques","body":"<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.thoughtworks.com/decoder/evolutionary-architecture\">Evolutionary architecture</a> is an\napproach to building software that’s designed to evolve over time as\nbusiness priorities change, customer demands shift, and new technologies emerge.</p>\n<p>We want to assess using some of the techniques in this area, like for example using &#39;Fitness Function\nDevelopment&#39;.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/evolutionary-architecture.md"},{"flag":"default","featured":true,"revisions":[{"name":"express","release":"2021-09-18","title":"Express","ring":"hold","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/express.md","body":"<p>We prefer Fastify over Express as Node.js web framework.</p>\n"}],"name":"express","title":"Express","ring":"hold","quadrant":"languages-and-frameworks","body":"<p>We prefer Fastify over Express as Node.js web framework.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/express.md"},{"flag":"new","featured":true,"revisions":[{"name":"github","release":"2022-05-17","title":"GitHub","ring":"adopt","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/github.md","body":"<p>We prefer GitHub as source code management and CI solution. </p>\n<p>Background:</p>\n<p>In the context of consolidating where possible on a source code management and Continuous\nIntegration solution for our software projects, facing suboptimal experiences with Bitbucket Cloud,\nAzure DevOps and AWS CodeCommit, we decided to prefer GitHub Enterprise for new projects because it\noffers the best set of features for the price, is the market leader in this area and solves the\nissues we came across using the other vendor solutions, accepting that we will still have to\nmaintain software projects in the other vendor solutions and potentially also new software projects\ndepending on the requirements of our clients.</p>\n"}],"name":"github","title":"GitHub","ring":"adopt","quadrant":"tools","body":"<p>We prefer GitHub as source code management and CI solution. </p>\n<p>Background:</p>\n<p>In the context of consolidating where possible on a source code management and Continuous\nIntegration solution for our software projects, facing suboptimal experiences with Bitbucket Cloud,\nAzure DevOps and AWS CodeCommit, we decided to prefer GitHub Enterprise for new projects because it\noffers the best set of features for the price, is the market leader in this area and solves the\nissues we came across using the other vendor solutions, accepting that we will still have to\nmaintain software projects in the other vendor solutions and potentially also new software projects\ndepending on the requirements of our clients.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/github.md"},{"flag":"new","featured":true,"revisions":[{"name":"github-code-spaces","release":"2022-05-17","title":"GitHub Code Spaces","ring":"assess","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/github-code-spaces.md","body":"<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/features/codespaces\">GitHub Code Spaces</a> is a very easy way to set up browser-based development environments and may be\nespecially suited for projects in (low) maintenance and such. Previously we had Docker Development\nEnvironments in Assess as potential candidate in this space but we now think GitHub Code Spaces is a\nmuch better and easier solution for us.</p>\n"}],"name":"github-code-spaces","title":"GitHub Code Spaces","ring":"assess","quadrant":"tools","body":"<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/features/codespaces\">GitHub Code Spaces</a> is a very easy way to set up browser-based development environments and may be\nespecially suited for projects in (low) maintenance and such. Previously we had Docker Development\nEnvironments in Assess as potential candidate in this space but we now think GitHub Code Spaces is a\nmuch better and easier solution for us.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/github-code-spaces.md"},{"flag":"new","featured":true,"revisions":[{"name":"go","release":"2022-05-17","title":"Go","ring":"assess","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/go.md","body":"<p>Go is the modern &quot;enterprise&quot; programming language, built by Google in the late 2000s. We think it\ncan be a good candidate for our preferred backend programming language for certain types of projects \nbecause of its focus of being simple, strict and scalable. </p>\n"}],"name":"go","title":"Go","ring":"assess","quadrant":"languages-and-frameworks","body":"<p>Go is the modern &quot;enterprise&quot; programming language, built by Google in the late 2000s. We think it\ncan be a good candidate for our preferred backend programming language for certain types of projects \nbecause of its focus of being simple, strict and scalable. </p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/go.md"},{"flag":"default","featured":true,"revisions":[{"name":"graphql","release":"2021-09-18","title":"GraphQL","ring":"adopt","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/graphql.md","body":"<p>GraphQL is a powerful way to expose an API for frontend use and is preferred over REST APIs in most\ncases because it often increases flexibility and agility.</p>\n<p>Beware\nof <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.thoughtworks.com/radar/techniques/graphql-for-server-side-resource-aggregation\">GraphQL misuse</a>\nhowever. A mix of GraphQL and REST may also be a viable solution.</p>\n"}],"name":"graphql","title":"GraphQL","ring":"adopt","quadrant":"languages-and-frameworks","body":"<p>GraphQL is a powerful way to expose an API for frontend use and is preferred over REST APIs in most\ncases because it often increases flexibility and agility.</p>\n<p>Beware\nof <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.thoughtworks.com/radar/techniques/graphql-for-server-side-resource-aggregation\">GraphQL misuse</a>\nhowever. A mix of GraphQL and REST may also be a viable solution.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/graphql.md"},{"flag":"default","featured":true,"revisions":[{"name":"infrastructure-as-code","release":"2020-09-01","title":"Infrastructure as Code","ring":"adopt","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/infrastructure-as-code.md","body":"<p>All cloud infrastructure should be provisioned and maintained using Infrastructure as Code (IaC). To\nmanage this we will use templating services provided by the cloud provider. For AWS we will use\nCloudformation and for Azure resources, we will use ARM templates. If possible use policies to\ndisable manual changes in cloud portals and force scripted modifications.</p>\n"}],"name":"infrastructure-as-code","title":"Infrastructure as Code","ring":"adopt","quadrant":"techniques","body":"<p>All cloud infrastructure should be provisioned and maintained using Infrastructure as Code (IaC). To\nmanage this we will use templating services provided by the cloud provider. For AWS we will use\nCloudformation and for Azure resources, we will use ARM templates. If possible use policies to\ndisable manual changes in cloud portals and force scripted modifications.</p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/infrastructure-as-code.md"},{"flag":"default","featured":true,"revisions":[{"name":"jamstack","release":"2021-09-18","title":"Jamstack","ring":"trial","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/jamstack.md","body":"<p>Jamstack is an architecture designed to make the web faster, more secure, and easier to scale. It\nbuilds on many of the tools and workflows which developers love, and which bring maximum\nproductivity. The core principles of pre-rendering, and decoupling, enable sites and applications to\nbe delivered with greater confidence and resilience than ever before. </p>\n"}],"name":"jamstack","title":"Jamstack","ring":"trial","quadrant":"techniques","body":"<p>Jamstack is an architecture designed to make the web faster, more secure, and easier to scale. It\nbuilds on many of the tools and workflows which developers love, and which bring maximum\nproductivity. The core principles of pre-rendering, and decoupling, enable sites and applications to\nbe delivered with greater confidence and resilience than ever before. </p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/jamstack.md"},{"flag":"default","featured":true,"revisions":[{"name":"java","release":"2020-09-01","title":"Java","ring":"hold","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/java.md","body":"<p>We prefer Kotlin over Java.</p>\n"}],"name":"java","title":"Java","ring":"hold","quadrant":"languages-and-frameworks","body":"<p>We prefer Kotlin over Java.</p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/java.md"},{"flag":"default","featured":true,"revisions":[{"name":"javascript","release":"2021-09-18","title":"JavaScript","ring":"hold","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/javascript.md","body":"<p>We now prefer TypeScript over JavaScript.</p>\n"},{"name":"javascript","release":"2020-09-01","title":"Adopt","ring":"adopt","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/javascript.md","body":""}],"name":"javascript","title":"JavaScript","ring":"hold","quadrant":"languages-and-frameworks","body":"<p>We now prefer TypeScript over JavaScript.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/javascript.md"},{"flag":"default","featured":true,"revisions":[{"name":"k6","release":"2021-09-18","title":"k6","ring":"trial","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/k6.md","body":"<p>k6 is a modern and strong candidate for load &amp; performance (and stress) test tooling. Being JavaScript-based it is often easier to use with our available team skills than other load &amp; performance test tooling. We already use it in some of our client teams with good results. Also see: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.thoughtworks.com/radar/tools/k6\">https://www.thoughtworks.com/radar/tools/k6</a></p>\n"}],"name":"k6","title":"k6","ring":"trial","quadrant":"tools","body":"<p>k6 is a modern and strong candidate for load &amp; performance (and stress) test tooling. Being JavaScript-based it is often easier to use with our available team skills than other load &amp; performance test tooling. We already use it in some of our client teams with good results. Also see: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.thoughtworks.com/radar/tools/k6\">https://www.thoughtworks.com/radar/tools/k6</a></p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/k6.md"},{"flag":"default","featured":true,"revisions":[{"name":"kotlin","release":"2020-09-01","title":"Kotlin","ring":"adopt","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/kotlin.md","body":"<p>We see Kotlin as a logical evolution of Java bringing increased agility to development teams while requiring a minimal learning curve when coming from Java. \nWhen using Kotlin Prefer Ktor over Spring Boot for new Kotlin projects.</p>\n<p>We prefer Kotlin when:</p>\n<ul>\n<li>The application needs to perform multiple tasks concurrently, where some of these tasks can be computationally expensive. The application needs to remain performant during this time. The concurrency model of Kotlin is usually a better and more performant match in these cases compared to the event-based Node.js model. Typically this situation will be encountered only in monolithical (and sometimes also microservices) architectures and not in serverless architectures where separate tasks are normally executed in isolation.</li>\n</ul>\n"}],"name":"kotlin","title":"Kotlin","ring":"adopt","quadrant":"languages-and-frameworks","body":"<p>We see Kotlin as a logical evolution of Java bringing increased agility to development teams while requiring a minimal learning curve when coming from Java. \nWhen using Kotlin Prefer Ktor over Spring Boot for new Kotlin projects.</p>\n<p>We prefer Kotlin when:</p>\n<ul>\n<li>The application needs to perform multiple tasks concurrently, where some of these tasks can be computationally expensive. The application needs to remain performant during this time. The concurrency model of Kotlin is usually a better and more performant match in these cases compared to the event-based Node.js model. Typically this situation will be encountered only in monolithical (and sometimes also microservices) architectures and not in serverless architectures where separate tasks are normally executed in isolation.</li>\n</ul>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/kotlin.md"},{"flag":"default","featured":true,"revisions":[{"name":"kubernetes","release":"2020-09-01","title":"Kubernetes","ring":"adopt","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/kubernetes.md","body":"<p>Kubernetes is the industry standard for container orchestration and is also offered as such by all main cloud vendors. </p>\n"}],"name":"kubernetes","title":"Kubernetes","ring":"adopt","quadrant":"tools","body":"<p>Kubernetes is the industry standard for container orchestration and is also offered as such by all main cloud vendors. </p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/kubernetes.md"},{"flag":"default","featured":true,"revisions":[{"name":"low-code-no-code-development","release":"2021-09-18","title":"Low-code / no-code development","ring":"assess","quadrant":"platforms","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/low-code-no-code-development.md","body":"<p>Low-code platforms use graphical user interfaces and configuration in order to create applications.</p>\n<p>We want to assess the general use case of such platforms in our context and also gain more\nexperience and knowledge on the market leading platforms in this area.</p>\n"}],"name":"low-code-no-code-development","title":"Low-code / no-code development","ring":"assess","quadrant":"platforms","body":"<p>Low-code platforms use graphical user interfaces and configuration in order to create applications.</p>\n<p>We want to assess the general use case of such platforms in our context and also gain more\nexperience and knowledge on the market leading platforms in this area.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/low-code-no-code-development.md"},{"flag":"changed","featured":false,"revisions":[{"name":"magnolia","release":"2022-05-17","title":"Magnolia","ring":"hold","quadrant":"platforms","featured":false,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/magnolia.md","body":"<p>We have other preferred headless CMSes in our radar that replace Magnolia as our preferred CMS.</p>\n"},{"name":"magnolia","release":"2021-09-18","title":"Magnolia","ring":"hold","quadrant":"platforms","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/magnolia.md","body":"<p>We have other preferred headless CMSes in our radar that replace Magnolia as our preferred CMS.</p>\n"}],"name":"magnolia","title":"Magnolia","ring":"hold","quadrant":"platforms","body":"<p>We have other preferred headless CMSes in our radar that replace Magnolia as our preferred CMS.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/magnolia.md"},{"flag":"default","featured":true,"revisions":[{"name":"micro-frontends","release":"2021-09-18","title":"Micro Frontends","ring":"assess","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/micro-frontends.md","body":"<p>An architectural style where independently deliverable frontend applications are composed into a\ngreater whole. Some of the key benefits that we&#39;ve seen from micro-frontends are, smaller, more\ncohesive and maintainable codebases,more scalable organisations with decoupled, autonomous teams and\nthe ability to upgrade, update, or even rewrite parts of the frontend in a more incremental fashion\nthan was previously possible.</p>\n"}],"name":"micro-frontends","title":"Micro Frontends","ring":"assess","quadrant":"techniques","body":"<p>An architectural style where independently deliverable frontend applications are composed into a\ngreater whole. Some of the key benefits that we&#39;ve seen from micro-frontends are, smaller, more\ncohesive and maintainable codebases,more scalable organisations with decoupled, autonomous teams and\nthe ability to upgrade, update, or even rewrite parts of the frontend in a more incremental fashion\nthan was previously possible.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/micro-frontends.md"},{"flag":"default","featured":true,"revisions":[{"name":"microservices","release":"2020-09-01","title":"Microservices","ring":"adopt","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/microservices.md","body":"<p>A microservices architecture is preferred over traditional monolithic architectures because it\ntypically increases agility and time-to-market. Our preferred cloud vendors offer excellent support\nfor microservices container architectures using vendor-specific services and/or Kubernetes\nsolutions. For more background\nsee: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://info.nl/en/conversation/lessons-learned-why-you-should-use-microservices-architecture-for-your-applications/\">Why you should use Microservices Architecture for your applications</a>\nand <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://info.nl/en/conversation/the-importance-of-loose-coupling-in-microservice-architecture/\">The importance of loose coupling in microservice architecture</a>.</p>\n"}],"name":"microservices","title":"Microservices","ring":"adopt","quadrant":"techniques","body":"<p>A microservices architecture is preferred over traditional monolithic architectures because it\ntypically increases agility and time-to-market. Our preferred cloud vendors offer excellent support\nfor microservices container architectures using vendor-specific services and/or Kubernetes\nsolutions. For more background\nsee: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://info.nl/en/conversation/lessons-learned-why-you-should-use-microservices-architecture-for-your-applications/\">Why you should use Microservices Architecture for your applications</a>\nand <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://info.nl/en/conversation/the-importance-of-loose-coupling-in-microservice-architecture/\">The importance of loose coupling in microservice architecture</a>.</p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/microservices.md"},{"flag":"default","featured":true,"revisions":[{"name":"nodejs","release":"2020-09-01","title":"Node.js","ring":"adopt","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/nodejs.md","body":"<p>We prefer Nods.js when:</p>\n<ul>\n<li>You want to get started quickly with little overhead. Kotlin projects tend to have somewhat more overhead in setting things up, also with regards to the JVM runtime that is used.</li>\n<li>Full-stack development is important. E.g. for smaller projects where developers need to be full-stack, Node.js would generally be preferred since Node.js developers can relatively easily do frontend development as well, both being JavaScript based.</li>\n<li>Doing serverless development. Node.js is more often used in this area compared to Kotlin and fits better with our preferred serverless frameworks</li>\n</ul>\n"}],"name":"nodejs","title":"Node.js","ring":"adopt","quadrant":"languages-and-frameworks","body":"<p>We prefer Nods.js when:</p>\n<ul>\n<li>You want to get started quickly with little overhead. Kotlin projects tend to have somewhat more overhead in setting things up, also with regards to the JVM runtime that is used.</li>\n<li>Full-stack development is important. E.g. for smaller projects where developers need to be full-stack, Node.js would generally be preferred since Node.js developers can relatively easily do frontend development as well, both being JavaScript based.</li>\n<li>Doing serverless development. Node.js is more often used in this area compared to Kotlin and fits better with our preferred serverless frameworks</li>\n</ul>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/nodejs.md"},{"flag":"new","featured":true,"revisions":[{"name":"platform-as-a-service","release":"2022-05-17","title":"Platform as a Service (PaaS)","ring":"assess","quadrant":"platforms","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/platform-as-a-service.md","body":"<p>Using a PaaS platform for specific projects (instead of using more low-level cloud-native services from AWS or Azure)\ncan have benefits in efficiency, time-to-market and costs. We want to investigate the use case of\nsuch platforms in our context and if we agree on it define one or more preferred PaaS platforms \nas well as define guidelines on when to use them. </p>\n"}],"name":"platform-as-a-service","title":"Platform as a Service (PaaS)","ring":"assess","quadrant":"platforms","body":"<p>Using a PaaS platform for specific projects (instead of using more low-level cloud-native services from AWS or Azure)\ncan have benefits in efficiency, time-to-market and costs. We want to investigate the use case of\nsuch platforms in our context and if we agree on it define one or more preferred PaaS platforms \nas well as define guidelines on when to use them. </p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/platform-as-a-service.md"},{"flag":"changed","featured":true,"revisions":[{"name":"progressive-web-applications","release":"2022-05-17","title":"Progressive Web Applications","ring":"assess","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/progressive-web-applications.md","body":"<p>PWAs are web applications that take advantage of the latest technologies to combine the best of web\nand native mobile applications. All current desktop browsers and common mobile browsers support the\nService Worker API and most “meta-frameworks” make implementation trivial.</p>\n"},{"name":"progressive-web-applications","release":"2021-09-18","title":"Progressive Web Applications","ring":"adopt","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/progressive-web-applications.md","body":"<p>PWAs are web applications that take advantage of the latest technologies to combine the best of web\nand native mobile applications. All current desktop browsers and common mobile browsers support the\nService Worker API and most “meta-frameworks” make implementation trivial.</p>\n"}],"name":"progressive-web-applications","title":"Progressive Web Applications","ring":"assess","quadrant":"techniques","body":"<p>PWAs are web applications that take advantage of the latest technologies to combine the best of web\nand native mobile applications. All current desktop browsers and common mobile browsers support the\nService Worker API and most “meta-frameworks” make implementation trivial.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/progressive-web-applications.md"},{"flag":"default","featured":true,"revisions":[{"name":"python","release":"2020-09-01","title":"Python","ring":"assess","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/python.md","body":"<p>Preferred language for AI &amp; data science because it is world-wide the leading programming language for AI &amp; data science by far (also in the cloud, depending on specific tooling). </p>\n"}],"name":"python","title":"Python","ring":"assess","quadrant":"languages-and-frameworks","body":"<p>Preferred language for AI &amp; data science because it is world-wide the leading programming language for AI &amp; data science by far (also in the cloud, depending on specific tooling). </p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/python.md"},{"flag":"default","featured":true,"revisions":[{"name":"react","release":"2020-09-01","title":"React","ring":"adopt","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/react.md","body":"<p>In the context of developing user interfaces for the web, facing a plethora of libraries and frameworks to create these user interfaces, we decided for React and neglected other libraries/frameworks like Angular, Vue.js, Svelte, jQuery and others, to achieve a preferred open source front-end library based on web technologies, accepting limiting our ability to work effectively on existing user interfaces for the web built using other libraries/frameworks, because React provides us with a uniform way of working with a proven mature technology, tool chain and extensive (community) resources that is portable to mobile development.</p>\n"}],"name":"react","title":"React","ring":"adopt","quadrant":"languages-and-frameworks","body":"<p>In the context of developing user interfaces for the web, facing a plethora of libraries and frameworks to create these user interfaces, we decided for React and neglected other libraries/frameworks like Angular, Vue.js, Svelte, jQuery and others, to achieve a preferred open source front-end library based on web technologies, accepting limiting our ability to work effectively on existing user interfaces for the web built using other libraries/frameworks, because React provides us with a uniform way of working with a proven mature technology, tool chain and extensive (community) resources that is portable to mobile development.</p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/react.md"},{"flag":"default","featured":true,"revisions":[{"name":"react-native","release":"2020-09-01","title":"React Native","ring":"adopt","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/react-native.md","body":"<p>We prefer React Native as our primary technology for native mobile app development.</p>\n"}],"name":"react-native","title":"React Native","ring":"adopt","quadrant":"languages-and-frameworks","body":"<p>We prefer React Native as our primary technology for native mobile app development.</p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/react-native.md"},{"flag":"changed","featured":true,"revisions":[{"name":"renovate","release":"2022-05-17","title":"Renovate","ring":"adopt","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/renovate.md","body":"<p>Multi-platform and multi-language automated dependency updates. Prefer <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/dependabot\">Renovate</a> when not using\nGitHub since GitHub offers Dependabot out-of-the-box which offers the same functionality.</p>\n"},{"name":"renovate","release":"2021-09-18","title":"Renovate","ring":"trial","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/renovate.md","body":"<p>Multi-platform and multi-language automated dependency updates.</p>\n"}],"name":"renovate","title":"Renovate","ring":"adopt","quadrant":"tools","body":"<p>Multi-platform and multi-language automated dependency updates. Prefer <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/dependabot\">Renovate</a> when not using\nGitHub since GitHub offers Dependabot out-of-the-box which offers the same functionality.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/renovate.md"},{"flag":"default","featured":true,"revisions":[{"name":"run-cost-as-architecture-fitness-function","release":"2021-09-18","title":"Run cost as architecture fitness function","ring":"assess","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/run-cost-as-architecture-fitness-function.md","body":"<p>Architecture run cost is the actual cost for running a particular (cloud) configuration, including\nmaintenance, etc. With the push for more cloud based solutions, it is important to have a good view\non the cost of the choices that have to be, and have been made. A fitness function for run-cost\nshould be used as a guide for choosing solutions, as these are directly impacting the customer.</p>\n"}],"name":"run-cost-as-architecture-fitness-function","title":"Run cost as architecture fitness function","ring":"assess","quadrant":"techniques","body":"<p>Architecture run cost is the actual cost for running a particular (cloud) configuration, including\nmaintenance, etc. With the push for more cloud based solutions, it is important to have a good view\non the cost of the choices that have to be, and have been made. A fitness function for run-cost\nshould be used as a guide for choosing solutions, as these are directly impacting the customer.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/run-cost-as-architecture-fitness-function.md"},{"flag":"default","featured":true,"revisions":[{"name":"serverless","release":"2020-09-01","title":"Serverless","ring":"adopt","quadrant":"techniques","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/serverless.md","body":"<p>We use the <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://aws.amazon.com/serverless/\">AWS definition of serverless</a>:\n&quot;Serverless is the native architecture of the cloud that enables you to shift more of your\noperational responsibilities to AWS, increasing your agility and innovation. Serverless allows you\nto build and run applications and services without thinking about servers.</p>\n<p>At INFO we prefer a serverless architecture (over other architectures like microservices) for most\nnew client solutions, depending on requirements, potential constraints as well available expertise (\nmore detailed reasoning will be added later), because of increased agility and time-to-market. A\ncombination of a serverless and (cloud-native) microservice/container architecture is also a viable\noption in many cases.</p>\n"}],"name":"serverless","title":"Serverless","ring":"adopt","quadrant":"techniques","body":"<p>We use the <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://aws.amazon.com/serverless/\">AWS definition of serverless</a>:\n&quot;Serverless is the native architecture of the cloud that enables you to shift more of your\noperational responsibilities to AWS, increasing your agility and innovation. Serverless allows you\nto build and run applications and services without thinking about servers.</p>\n<p>At INFO we prefer a serverless architecture (over other architectures like microservices) for most\nnew client solutions, depending on requirements, potential constraints as well available expertise (\nmore detailed reasoning will be added later), because of increased agility and time-to-market. A\ncombination of a serverless and (cloud-native) microservice/container architecture is also a viable\noption in many cases.</p>\n","info":"","release":"2020-09-01","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/serverless.md"},{"flag":"default","featured":true,"revisions":[{"name":"strapi","release":"2021-09-18","title":"Strapi","ring":"adopt","quadrant":"tools","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/strapi.md","body":"<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://strapi.io/\">Strapi</a> is our preferred CMS. It is widely used, open-source and headless with\na good API. Usually the free community edition serves our needs but Strapi also offers enterprise editions with\nadditional features.</p>\n"}],"name":"strapi","title":"Strapi","ring":"adopt","quadrant":"tools","body":"<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://strapi.io/\">Strapi</a> is our preferred CMS. It is widely used, open-source and headless with\na good API. Usually the free community edition serves our needs but Strapi also offers enterprise editions with\nadditional features.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/strapi.md"},{"flag":"changed","featured":false,"revisions":[{"name":"support-for-ie11","release":"2022-05-17","title":"Support for Internet Explorer 11","ring":"hold","quadrant":"platforms","featured":false,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/support-for-ie11.md","body":"<p>No relevant browser anymore for the target audience of our clients.</p>\n"},{"name":"support-for-ie11","release":"2021-09-18","title":"Support for Internet Explorer 11","ring":"hold","quadrant":"platforms","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/support-for-ie11.md","body":"<p>No relevant browser anymore for the target audience of our clients.</p>\n"}],"name":"support-for-ie11","title":"Support for Internet Explorer 11","ring":"hold","quadrant":"platforms","body":"<p>No relevant browser anymore for the target audience of our clients.</p>\n","info":"","release":"2022-05-17","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2022-05-17/support-for-ie11.md"},{"flag":"default","featured":true,"revisions":[{"name":"typescript","release":"2021-09-18","title":"TypeScript","ring":"adopt","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/typescript.md","body":"<p>In the context of creating user-interfaces with React (or React-Native) and back-end applications\nusing Node.js, facing the proliferation of different languages used within INFO and the engineering\ncommunities at large we decided for TypeScript as the preferred language in favor of JavaScript and\nneglected Flow and others languages, to achieve a common way of working that will allow software\nengineers to work on or maintain multiple codebases over multiple projects, accepting limiting the\noptions for teams and individual engineers to select their tools.</p>\n"},{"name":"typescript","release":"2020-09-01","title":"TypeScript","ring":"assess","quadrant":"languages-and-frameworks","featured":true,"fileName":"/home/runner/work/info-techradar/info-techradar/radar/2020-09-01/typescript.md","body":""}],"name":"typescript","title":"TypeScript","ring":"adopt","quadrant":"languages-and-frameworks","body":"<p>In the context of creating user-interfaces with React (or React-Native) and back-end applications\nusing Node.js, facing the proliferation of different languages used within INFO and the engineering\ncommunities at large we decided for TypeScript as the preferred language in favor of JavaScript and\nneglected Flow and others languages, to achieve a common way of working that will allow software\nengineers to work on or maintain multiple codebases over multiple projects, accepting limiting the\noptions for teams and individual engineers to select their tools.</p>\n","info":"","release":"2021-09-18","fileName":"/home/runner/work/info-techradar/info-techradar/radar/2021-09-18/typescript.md"}],"releases":["2020-09-01","2021-09-18","2022-05-17"]}